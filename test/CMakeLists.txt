cmake_minimum_required(VERSION 2.8)
set(CMAKE_C_FLAGS_RELEASE "-Wall -O2 -fPIC")
set(CMAKE_C_FLAGS_DEBUG "-Wall -g -fPIC")
set(CMAKE_CXX_FLAGS_RELEASE "-Wall -O2 -fPIC -std=c++11")
set(CMAKE_CXX_FLAGS_DEBUG "-Wall -g -fPIC -std=c++11")
project(ea1_test)
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "Release")
endif(NOT CMAKE_BUILD_TYPE)
message("${PROJECT_NAME} CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}")
message("please do 'make check' for testing")
include_directories(..)
add_executable(ea1_test EXCLUDE_FROM_ALL ea1_test_main.cpp)
target_link_libraries(ea1_test ea1)
add_executable(ea1_named_test EXCLUDE_FROM_ALL ea1_named_test.cpp)
target_link_libraries(ea1_named_test ea1 gtest gtest_main pthread)
add_executable(ea1_composite_test EXCLUDE_FROM_ALL ea1_composite_test.cpp)
target_link_libraries(ea1_composite_test ea1 gtest gtest_main pthread)
enable_testing()
add_test(test0 ea1_test)
add_test(named_test ea1_named_test)
add_test(composite_test ea1_composite_test)
add_custom_target(check COMMAND ${CMAKE_CTEST_COMMAND} DEPENDS
  ea1_test ea1_named_test ea1_composite_test)
